name: Flutter CI/CD

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout My Code
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Eclipse Temurin distribution
          java-version: '17'

      - name: Install Flutter Version 3.27.1
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1' # Use required Flutter version

      - name: Install Dependencies
        run: flutter pub get

      # Find the gradlew file
      - name: Find Gradle Wrapper
        run: find . -name "gradlew"

      # ðŸ‘‰ Create the key.properties file
      - name: Create key.properties
        run: |
          echo "storeFile=../app/keystore.jks" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties

      # ðŸ‘‰ Decode Keystore
      - name: Decode Keystore
        run: echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      # Skip the Gradle permission step for now - we'll determine correct path first
      # - name: Make Gradle executable
      #   run: chmod +x android/gradlew

      # ðŸ‘‰ Build the Signed APK - Flutter handles Gradle execution
      - name: Build APK
        run: flutter build apk --release

      # ðŸ‘‰ Upload the APK artifact for download
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk